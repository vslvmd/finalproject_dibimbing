{"ast":null,"code":"import _toConsumableArray from\"/Users/vasaamadea/Desktop/finalproject_dibimbing/finalproject_dibimbing/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/vasaamadea/Desktop/finalproject_dibimbing/finalproject_dibimbing/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{FETCH_ALL,FETCH_BY_SEARCH,FETCH_POST,CREATE,UPDATE,DELETE,LIKE}from'../constants/actionTypes';export default(function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{isLoading:true,posts:[]};var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'START_LOADING':return _objectSpread(_objectSpread({},state),{},{isLoading:true});case'END_LOADING':return _objectSpread(_objectSpread({},state),{},{isLoading:false});case FETCH_ALL:return _objectSpread(_objectSpread({},state),{},{posts:action.payload.data,currentPage:action.payload.currentPage,numberOfPages:action.payload.numberOfPages});case FETCH_BY_SEARCH:return _objectSpread(_objectSpread({},state),{},{posts:action.payload.data});case FETCH_POST:return _objectSpread(_objectSpread({},state),{},{post:action.payload.post});case LIKE:return _objectSpread(_objectSpread({},state),{},{posts:state.posts.map(function(post){return post._id===action.payload._id?action.payload:post;})});case CREATE:return _objectSpread(_objectSpread({},state),{},{posts:[].concat(_toConsumableArray(state.posts),[action.payload])});case UPDATE:return _objectSpread(_objectSpread({},state),{},{posts:state.posts.map(function(post){return post._id===action.payload._id?action.payload:post;})});case DELETE:return _objectSpread(_objectSpread({},state),{},{posts:state.posts.filter(function(post){return post._id!==action.payload;})});default:return state;}});","map":{"version":3,"sources":["/Users/vasaamadea/Desktop/finalproject_dibimbing/finalproject_dibimbing/frontend/src/reducers/posts.js"],"names":["FETCH_ALL","FETCH_BY_SEARCH","FETCH_POST","CREATE","UPDATE","DELETE","LIKE","state","isLoading","posts","action","type","payload","data","currentPage","numberOfPages","post","map","_id","filter"],"mappings":"qZAAA,OAASA,SAAT,CAAoBC,eAApB,CAAqCC,UAArC,CAAiDC,MAAjD,CAAyDC,MAAzD,CAAiEC,MAAjE,CAAyEC,IAAzE,KAAqF,0BAArF,CAEA,eAAe,UAAoD,IAAnDC,CAAAA,KAAmD,2DAA3C,CAAEC,SAAS,CAAE,IAAb,CAAmBC,KAAK,CAAE,EAA1B,CAA2C,IAAXC,CAAAA,MAAW,2CACjE,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,eAAL,CACE,sCAAYJ,KAAZ,MAAmBC,SAAS,CAAE,IAA9B,GACF,IAAK,aAAL,CACE,sCAAYD,KAAZ,MAAmBC,SAAS,CAAE,KAA9B,GACF,IAAKR,CAAAA,SAAL,CACE,sCACKO,KADL,MAEEE,KAAK,CAAEC,MAAM,CAACE,OAAP,CAAeC,IAFxB,CAGEC,WAAW,CAAEJ,MAAM,CAACE,OAAP,CAAeE,WAH9B,CAIEC,aAAa,CAAEL,MAAM,CAACE,OAAP,CAAeG,aAJhC,GAMF,IAAKd,CAAAA,eAAL,CACE,sCAAYM,KAAZ,MAAmBE,KAAK,CAAEC,MAAM,CAACE,OAAP,CAAeC,IAAzC,GACF,IAAKX,CAAAA,UAAL,CACE,sCAAYK,KAAZ,MAAmBS,IAAI,CAAEN,MAAM,CAACE,OAAP,CAAeI,IAAxC,GACF,IAAKV,CAAAA,IAAL,CACE,sCAAYC,KAAZ,MAAmBE,KAAK,CAAEF,KAAK,CAACE,KAAN,CAAYQ,GAAZ,CAAgB,SAACD,IAAD,QAAWA,CAAAA,IAAI,CAACE,GAAL,GAAaR,MAAM,CAACE,OAAP,CAAeM,GAA5B,CAAkCR,MAAM,CAACE,OAAzC,CAAmDI,IAA9D,EAAhB,CAA1B,GACF,IAAKb,CAAAA,MAAL,CACE,sCAAYI,KAAZ,MAAmBE,KAAK,8BAAMF,KAAK,CAACE,KAAZ,GAAmBC,MAAM,CAACE,OAA1B,EAAxB,GACF,IAAKR,CAAAA,MAAL,CACE,sCAAYG,KAAZ,MAAmBE,KAAK,CAAEF,KAAK,CAACE,KAAN,CAAYQ,GAAZ,CAAgB,SAACD,IAAD,QAAWA,CAAAA,IAAI,CAACE,GAAL,GAAaR,MAAM,CAACE,OAAP,CAAeM,GAA5B,CAAkCR,MAAM,CAACE,OAAzC,CAAmDI,IAA9D,EAAhB,CAA1B,GACF,IAAKX,CAAAA,MAAL,CACE,sCAAYE,KAAZ,MAAmBE,KAAK,CAAEF,KAAK,CAACE,KAAN,CAAYU,MAAZ,CAAmB,SAACH,IAAD,QAAUA,CAAAA,IAAI,CAACE,GAAL,GAAaR,MAAM,CAACE,OAA9B,EAAnB,CAA1B,GACF,QACE,MAAOL,CAAAA,KAAP,CAzBJ,CA2BD,CA5BD","sourcesContent":["import { FETCH_ALL, FETCH_BY_SEARCH, FETCH_POST, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\n\nexport default (state = { isLoading: true, posts: [] }, action) => {\n  switch (action.type) {\n    case 'START_LOADING':\n      return { ...state, isLoading: true };\n    case 'END_LOADING':\n      return { ...state, isLoading: false };\n    case FETCH_ALL:\n      return {\n        ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages,\n      };\n    case FETCH_BY_SEARCH:\n      return { ...state, posts: action.payload.data };\n    case FETCH_POST:\n      return { ...state, post: action.payload.post };\n    case LIKE:\n      return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post)) };\n    case CREATE:\n      return { ...state, posts: [...state.posts, action.payload] };\n    case UPDATE:\n      return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post)) };\n    case DELETE:\n      return { ...state, posts: state.posts.filter((post) => post._id !== action.payload) };\n    default:\n      return state;\n  }\n};\n\n"]},"metadata":{},"sourceType":"module"}